[gd_scene load_steps=13 format=2]

[ext_resource path="res://boid.tscn" type="PackedScene" id=1]
[ext_resource path="res://main_env.gd" type="Script" id=2]
[ext_resource path="res://target.tscn" type="PackedScene" id=3]

[sub_resource type="Environment" id=1]
background_mode = 1
glow_enabled = true

[sub_resource type="SpatialMaterial" id=2]
params_blend_mode = 1
albedo_color = Color( 0, 0.552941, 1, 1 )
emission_enabled = true
emission = Color( 0.00784314, 0.996078, 0.972549, 1 )
emission_energy = 0.1
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="PlaneMesh" id=3]
size = Vector2( 200, 200 )

[sub_resource type="ConcavePolygonShape" id=4]
data = PoolVector3Array( 100, 0, 100, -100, 0, 100, 100, 0, -100, -100, 0, 100, -100, 0, -100, 100, 0, -100 )

[sub_resource type="ConcavePolygonShape" id=5]
data = PoolVector3Array( 100, 0, 100, -100, 0, 100, 100, 0, -100, -100, 0, 100, -100, 0, -100, 100, 0, -100 )

[sub_resource type="ConcavePolygonShape" id=6]
data = PoolVector3Array( 100, 0, 100, -100, 0, 100, 100, 0, -100, -100, 0, 100, -100, 0, -100, 100, 0, -100 )

[sub_resource type="ConcavePolygonShape" id=7]
data = PoolVector3Array( 100, 0, 100, -100, 0, 100, 100, 0, -100, -100, 0, 100, -100, 0, -100, 100, 0, -100 )

[sub_resource type="ConcavePolygonShape" id=8]
data = PoolVector3Array( 100, 0, 100, -100, 0, 100, 100, 0, -100, -100, 0, 100, -100, 0, -100, 100, 0, -100 )

[sub_resource type="ConcavePolygonShape" id=9]
data = PoolVector3Array( 100, 0, 100, -100, 0, 100, 100, 0, -100, -100, 0, 100, -100, 0, -100, 100, 0, -100 )

[node name="environment" type="Spatial"]
script = ExtResource( 2 )
Boid = ExtResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.707107, -0.309088, 0.635975, 0, 0.899405, 0.437116, -0.707107, -0.309088, 0.635975, 144.666, 87.3709, 144.666 )
far = 8192.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="target" parent="." instance=ExtResource( 3 )]
visible = false

[node name="wall_y-" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -100, 0 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="wall_y-"]

[node name="CollisionShape" type="CollisionShape" parent="wall_y-/StaticBody"]
shape = SubResource( 4 )

[node name="wall_y+" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 100, 0 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="wall_y+"]
visible = false

[node name="CollisionShape" type="CollisionShape" parent="wall_y+/StaticBody"]
shape = SubResource( 5 )

[node name="wall_z-" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, -100 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="wall_z-"]

[node name="CollisionShape" type="CollisionShape" parent="wall_z-/StaticBody"]
shape = SubResource( 6 )

[node name="wall_z+" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 100 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="wall_z+"]

[node name="CollisionShape" type="CollisionShape" parent="wall_z+/StaticBody"]
shape = SubResource( 7 )

[node name="wall_x+" type="MeshInstance" parent="."]
transform = Transform( -1.62921e-07, 1, -1.62921e-07, 0, -1.62921e-07, -1, -1, -1.62921e-07, 2.65431e-14, 100, 0, 0 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="wall_x+"]

[node name="CollisionShape" type="CollisionShape" parent="wall_x+/StaticBody"]
shape = SubResource( 8 )

[node name="wall_x-" type="MeshInstance" parent="."]
transform = Transform( -1.62921e-07, 1, -1.62921e-07, 0, -1.62921e-07, -1, -1, -1.62921e-07, 2.65431e-14, -100, 0, 0 )
visible = false
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="wall_x-"]

[node name="CollisionShape" type="CollisionShape" parent="wall_x-/StaticBody"]
shape = SubResource( 9 )

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="target_force" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 12.0
margin_right = 170.0
margin_bottom = 46.0
max_value = 1.0
step = 0.01
value = 0.05
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label2" type="Label" parent="Control/target_force"]
margin_top = -1.0
margin_right = 50.0
margin_bottom = 15.0
text = " target force"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="cohesion_force" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 37.0
margin_right = 170.0
margin_bottom = 71.0
max_value = 1.0
step = 0.01
value = 0.05
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label3" type="Label" parent="Control/cohesion_force"]
margin_top = -2.0
margin_right = 102.0
margin_bottom = 14.0
text = " cohesion  force"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="seperation_force" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 62.0
margin_right = 170.0
margin_bottom = 96.0
max_value = 1.0
step = 0.01
value = 0.05
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label4" type="Label" parent="Control/seperation_force"]
margin_top = -2.0
margin_right = 108.0
margin_bottom = 12.0
text = " seperation force"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="align_force" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 89.0
margin_right = 170.0
margin_bottom = 123.0
max_value = 1.0
step = 0.01
value = 0.05
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label5" type="Label" parent="Control/align_force"]
margin_top = -3.0
margin_right = 70.0
margin_bottom = 13.0
text = " align force"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="view_distance" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 115.0
margin_right = 170.0
margin_bottom = 149.0
min_value = 1.0
step = 0.1
value = 20.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label6" type="Label" parent="Control/view_distance"]
margin_top = -2.0
margin_right = 91.0
margin_bottom = 14.0
text = " view distance"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="avoid_distance" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 142.0
margin_right = 170.0
margin_bottom = 176.0
min_value = 5.0
max_value = 50.0
step = 0.1
value = 10.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label7" type="Label" parent="Control/avoid_distance"]
margin_top = -3.0
margin_right = 96.0
margin_bottom = 13.0
text = " avoid distance"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="count" type="HSlider" parent="Control"]
margin_left = 10.0
margin_top = 175.0
margin_right = 170.0
margin_bottom = 209.0
min_value = 1.0
max_value = 301.0
page = 1.0
value = 100.0
rounded = true
tick_count = 10
ticks_on_borders = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label7" type="Label" parent="Control/count"]
margin_top = -7.0
margin_right = 96.0
margin_bottom = 9.0
text = " boid count"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="value_changed" from="Control/target_force" to="." method="_on_target_force_value_changed"]
[connection signal="value_changed" from="Control/cohesion_force" to="." method="_on_cohesion_force_value_changed"]
[connection signal="value_changed" from="Control/seperation_force" to="." method="_on_seperation_force_value_changed"]
[connection signal="value_changed" from="Control/align_force" to="." method="_on_align_force_value_changed"]
[connection signal="value_changed" from="Control/view_distance" to="." method="_on_view_distance_value_changed"]
[connection signal="value_changed" from="Control/avoid_distance" to="." method="_on_avoid_distance_value_changed"]
[connection signal="value_changed" from="Control/count" to="." method="_on_count_value_changed"]
